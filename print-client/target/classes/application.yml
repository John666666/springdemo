server:
  port: 8091

spring:
  application:
    name: print-client

custom:
  params:
    printServerUrl: http://MICROSERVER-PRINT/rest/print/
    calcServerUrl: http://MICROSERVER-CALC/calc/

    # 测试use ribbon without eureka, must set ribbon.eureka.enabled=false
    printServerWithoutEurekaUrl: http://print/rest/print/
#    printServerWithoutEurekaUrl: http://%s/rest/print/  #通过调用loadbalancer client获取ip:port, 手动拼接访问地址

# 自定义starter属性
hello:
  name: 李四

eureka:
  client:
    serviceUrl:
#      defaultZone: http://lisi:123@peer1:8781/eureka/
      defaultZone: http://peer1:8781/eureka/
    registry-fetch-interval-seconds: 10
  instance:
    # prefer-ip-address: true #配置Eureka
    instance-id: ${spring.application.name}:${spring.application.instance_id:${server.port}}

springfox:
  documentation:
    swagger:
      v2:
        path: /swagger/v2/api-docs

debug: false

MICROSERVER-PRINT:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
#
#microserver-calc:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule


# 测试use ribbon without eureka, must set ribbon.eureka.enabled=false, because eureka will override ribbonServerList to DiscoveryEnabledNIWSServerList
print:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
    listOfServers: localhost:8001,localhost:8002

ribbon:
  eureka:
    enabled: true  #Disable Eureka Use in Ribbon, set: false
logging:
  level:
    root: info
#    com.netflix.loadbalancer: debug
    com.john.spring: debug


hystrix:
  command:
#    CalcServices#add(int,int):  #指定特定熔断器的属性(一般建议在代码中通过注解配置)，此处换成default可修改全局属性
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 1500 #设置熔断器判定超时的时间，超过此时间的请求会执行降级逻辑，默认1s

      circuitBreaker:
        requestVolumeThreshold: 2 #设置熔断阈值，在熔断统计窗口期内，错误请求（超时、异常）次数达到阈值就会触发熔断，执行降级逻辑，默认20
        sleepWindowInMilliseconds: 10000  #设置熔断器多久进入半开状态，然后再次尝试确定熔断器是否应再次关闭，默认5s
#        errorThresholdPercentage: 90  #设置在熔断统计窗口期内，错误请求达到百分之多少触发熔断，默认50
      metrics:
        rollingStats:
          timeInMilliseconds: 5000 #熔断度量窗口期时间， 默认10s
  threadpool:
    default:
      coreSize: 10
      maxQueueSize: 10


feign:
  hystrix:
    enabled: true
  client:
    config:
      default:
        readTimeout: 5000
        connectTimeout: 5000
#      MICROSERVER-PRINT:
#        readTimeout: 5000
#        connectTimeout: 5000
